version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: omikuji-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: omikuji
      POSTGRES_PASSWORD: omikuji_password
      POSTGRES_DB: omikuji_db
      # PostgreSQL configuration for better performance
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=en_US.UTF-8"
      # Tune PostgreSQL for time-series data
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5433:5432"
    volumes:
      # Persist database data
      - postgres_data:/var/lib/postgresql/data
      # Custom PostgreSQL configuration (optional)
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U omikuji -d omikuji_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - omikuji-network
    # Resource limits (adjust based on your needs)
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: omikuji-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - omikuji-network
    profiles:
      - tools

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  omikuji-network:
    driver: bridge

# Usage:
# 1. Start PostgreSQL only:
#    docker-compose up -d postgres
#
# 2. Start PostgreSQL with pgAdmin:
#    docker-compose --profile tools up -d
#
# 3. View logs:
#    docker-compose logs -f postgres
#
# 4. Stop services:
#    docker-compose down
#
# 5. Stop and remove volumes (WARNING: deletes all data):
#    docker-compose down -v
#
# Connection string for Omikuji:
# DATABASE_URL=postgresql://omikuji:omikuji_password@localhost:5433/omikuji_db
#
# Access pgAdmin (if started with --profile tools):
# http://localhost:5050
# Login: admin@example.com / admin_password
# Add server with:
#   - Host: postgres
#   - Port: 5432
#   - Username: omikuji
#   - Password: omikuji_password